{"version":3,"sources":["shadow/test/env.cljs"],"mappings":"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","names":["js/goog.define","shadow.test.env/UI-DRIVEN","js/shadow","js/shadow.test","js/shadow.test.env","js/shadow.test.env.tests-ref","shadow.test.env/tests-ref","cljs.core.atom","shadow.test.env/reset-test-data!","test-data","cljs.core.swap_BANG_","cljs.core/assoc","shadow.test.env/get-tests","cljs.core/deref","cljs.core.get","shadow.test.env/get-test-vars","iter__4529__auto__","s__37248","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","xs__6292__auto__","vec__37257","cljs.core/first","cljs.core.nth","iterys__4525__auto__","s__37250","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__37252","cljs.core/chunk-buffer","i__37251","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__37249","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","fs__4526__auto__","cljs.core.concat","iter__37247","ns","ns-info","var","js/Error","shadow.test.env/get-test-ns-info","cljs.core/Symbol","cljs.core.get_in","shadow.test.env/get-test-namespaces","cljs.core/keys","shadow.test.env/get-test-count","s__37269","b__37271","i__37270","map__37276","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","iter__37268","map__37281","vars","test-ns","cljs.core/vals","cljs.core.reduce","cljs.core/+","cljs.core/chunk-first"],"sourcesContent":["(ns shadow.test.env\n  (:require-macros [shadow.test.env]))\n\n(goog-define UI-DRIVEN false)\n\n;; this should be how cljs.test works out of the box IMHO\n;; all those macros don't compose and make writing testing utilities painful\n;; (eg. you have to recompile the namespace containing the macro to pick up new tests)\n;; only the macros were replaced, the functionality remains unchanged\n(defonce tests-ref (atom {:namespaces {}}))\n\n(defn reset-test-data! [test-data]\n  (swap! tests-ref assoc :namespaces test-data))\n\n(defn get-tests []\n  (get @tests-ref :namespaces))\n\n(defn get-test-vars []\n  (for [[ns ns-info] (get-tests)\n        var (:vars ns-info)]\n    var))\n\n(defn get-test-ns-info [ns]\n  {:pre [(symbol? ns)]}\n  (get-in @tests-ref [:namespaces ns]))\n\n(defn get-test-namespaces\n  \"returns all the registered test namespaces and symbols\n   use (get-test-ns-info the-sym) to get the details\"\n  []\n  (-> @tests-ref (:namespaces) (keys)))\n\n(defn get-test-count []\n  (->> (for [{:keys [vars] :as test-ns} (-> @tests-ref (:namespaces) (vals))]\n         (count vars))\n       (reduce + 0)))"]}